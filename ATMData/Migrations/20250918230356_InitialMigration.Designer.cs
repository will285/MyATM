// <auto-generated />
using ATMData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATMData.Migrations
{
    [DbContext(typeof(ATMContext))]
    [Migration("20250918230356_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("ATMData.Data.Account", b =>
                {
                    b.Property<int>("AccountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.HasKey("AccountNumber");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ATMData.Data.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("FromAccountNumber")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeposit")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTransfer")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ToAccountNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("TransactionId");

                    b.HasIndex("FromAccountNumber");

                    b.HasIndex("ToAccountNumber");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ATMData.Data.Transaction", b =>
                {
                    b.HasOne("ATMData.Data.Account", "FromAccount")
                        .WithMany()
                        .HasForeignKey("FromAccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATMData.Data.Account", "ToAccount")
                        .WithMany()
                        .HasForeignKey("ToAccountNumber");

                    b.Navigation("FromAccount");

                    b.Navigation("ToAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
